@page "/admin/account/list"
@attribute [Authorize(Roles = "Admin")]
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<Grid Model="model" Title="Accounts" ElementsType="RegisterRequest" OnCreate="@(() => NavigationManager.NavigateTo("/account/register"))" CanEdit="false" OnDelete="@((item) => DeleteAccount(item as RegisterRequest))" />

@code {
    string route = "api/accounts";
    GridModel<RegisterRequest> model;

    protected override async Task OnInitializedAsync()
    {
        var accounts = await HttpClient.GetFromJsonAsync<List<RegisterRequest>>(route);

        model = new GridModel<RegisterRequest>
        {
            Rows = accounts,
            UseAnnotations = true
        };
    }

    async Task DeleteAccount(RegisterRequest item)
    {
        HttpResponseMessage httpResponseMessage = await HttpClient.DeleteAsync($"{route}/{item?.Id}");

        if (httpResponseMessage != null && httpResponseMessage.IsSuccessStatusCode)
        {                
            model.Rows.Remove(item);

            var rows = model.Rows.ToList();
            model = new GridModel<RegisterRequest>
            {
                Rows = rows,
                UseAnnotations = true
            };
        }
    }
}

