@page "/admin/account/changepassword"
@using Microsoft.AspNetCore.WebUtilities
@layout AuthLayout
@inject HttpClient Http
@inject NavigationManager navManager

<div class="row">
    <div class="col-12">
            <h2>Change password</h2>
            <EditForm Model="model" OnValidSubmit="Change">
                <RadzenCard>
                    <label>Email</label>
                    <RadzenTextBox @bind-Value="model.Email"></RadzenTextBox>

                    <label>Password</label>
                    <RadzenPassword @bind-Value="model.Password"></RadzenPassword>

                    <label>Confirm Password</label>
                    <RadzenPassword @bind-Value="model.ConfirmPassword"></RadzenPassword>
                    <hr />
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <Alert Title="Attention" ErrorList="changePasswordResponse?.Errors" />
                    <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Reset Password" Icon="track_changes" ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2"></RadzenButton>
                </RadzenCard>
            </EditForm>
    </div>
</div>

@code {
    ChangePasswordRequest model = new ChangePasswordRequest();
    ChangePasswordResponse changePasswordResponse = null;

    protected override void OnAfterRender(bool firstRender)
    {
        var uri = navManager.ToAbsoluteUri(navManager.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var code))
        {
            model.Code = code.First();
        }
    }

    public async Task Change()
    {
        changePasswordResponse = await (await Http.PutAsJsonAsync<ChangePasswordRequest>("api/accounts/changepassword", model))?.Content?.ReadFromJsonAsync<ChangePasswordResponse>();
            
        if (changePasswordResponse.IsSuccess)
        {
            navManager.NavigateTo("/admin/account/login");
        }
    }
}