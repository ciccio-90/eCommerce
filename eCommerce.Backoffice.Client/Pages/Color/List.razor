@page "/admin/color/list"
@attribute [Authorize(Roles = "Admin")]
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<Grid Model="model" Title="Colors" ElementsType="ProductColorDto" OnCreate="@(() => NavigationManager.NavigateTo("/admin/color/detail"))" OnEdit="@((item) => NavigationManager.NavigateTo($"/admin/color/detail/{(item as ProductColorDto)?.Id}"))" OnDelete="@((item) => DeleteColor(item as ProductColorDto))" />

@code {
    string route = "api/colors";
    GridModel<ProductColorDto> model;

    protected override async Task OnInitializedAsync()
    {
        var colors = await HttpClient.GetFromJsonAsync<List<ProductColorDto>>(route);

        model = new GridModel<ProductColorDto>
        {
            Rows = colors,
            UseAnnotations = true
        };
    }

    async Task DeleteColor(ProductColorDto item)
    {
        HttpResponseMessage httpResponseMessage = await HttpClient.DeleteAsync($"{route}/{item?.Id}");

        if (httpResponseMessage != null && httpResponseMessage.IsSuccessStatusCode)
        {                
            model.Rows.Remove(item);

            var rows = model.Rows.ToList();
            model = new GridModel<ProductColorDto>
            {
                Rows = rows,
                UseAnnotations = true
            };
        }
    }
}

